<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>林十二XII 的 Blog Blog</title>
        <link>https://lin-xii.github.io/blog/</link>
        <description>林十二XII 的 Blog Blog</description>
        <lastBuildDate>Fri, 13 Oct 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-Hans</language>
        <item>
            <title><![CDATA[GraphQL schema 命名习惯]]></title>
            <link>https://lin-xii.github.io/blog/2023/apollo-server/naming-conventions</link>
            <guid>https://lin-xii.github.io/blog/2023/apollo-server/naming-conventions</guid>
            <pubDate>Fri, 13 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[看了遍官方文档，总结了些常用的命名习惯。]]></description>
            <content:encoded><![CDATA[<p>看了遍官方文档，总结了些常用的命名习惯。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="tldr">TL;DR<a href="#tldr" class="hash-link" aria-label="TL;DR的直接链接" title="TL;DR的直接链接">​</a></h2><p>GraphQL 规范并没有强制要求命名规范，但建议遵循以下规则：</p><ul><li><strong>Field names</strong>: <code>camelCase</code></li><li><strong>Enum values</strong>: <code>ALL_CAPS</code></li><li><strong>Type names</strong>: <code>PascalCase</code></li><li><strong>Enum names</strong>: <code>PascalCase</code></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="original-docs">Original docs<a href="#original-docs" class="hash-link" aria-label="Original docs的直接链接" title="Original docs的直接链接">​</a></h2><p>The GraphQL specification is flexible and doesn't impose specific naming guidelines. However, it's helpful to establish a set of conventions to ensure consistency across your organization. We recommend the following:</p><ul><li><strong>Field names</strong> should use <code>camelCase</code>. Many GraphQL clients are written in JavaScript, Java, Kotlin, or Swift, all of which recommend camelCase for variable names.</li><li><strong>Type names</strong> should use <code>PascalCase</code>. This matches how classes are defined in the languages mentioned above.</li><li><strong>Enum names</strong> should use <code>PascalCase</code>.</li><li><strong>Enum values</strong> should use <code>ALL_CAPS</code>, because they are similar to constants.</li></ul><p>These conventions help ensure that most clients don't need to define extra logic to transform the results returned by your server.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="#参考资料" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2><ol><li><a href="https://www.apollographql.com/docs/apollo-server/schema/schema#naming-conventions" target="_blank" rel="noopener noreferrer">Apollo Server Docs</a></li><li><a href="https://github.com/graphql/graphql-spec" target="_blank" rel="noopener noreferrer">GraphQL Spec</a></li></ol>]]></content:encoded>
            <category>Apollo Server</category>
            <category>GraphQL</category>
            <category>Naming</category>
        </item>
        <item>
            <title><![CDATA[小破站第一篇blog]]></title>
            <link>https://lin-xii.github.io/blog/2023/first-blog</link>
            <guid>https://lin-xii.github.io/blog/2023/first-blog</guid>
            <pubDate>Wed, 11 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[开始写 blog 了]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="开始写-blog-了">开始写 blog 了<a href="#开始写-blog-了" class="hash-link" aria-label="开始写 blog 了的直接链接" title="开始写 blog 了的直接链接">​</a></h2><p>静极思动，准备捡起来原来的 blog 计划了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="为什么写-blog">为什么写 blog<a href="#为什么写-blog" class="hash-link" aria-label="为什么写 blog的直接链接" title="为什么写 blog的直接链接">​</a></h2><p>大量的纸质笔记，查阅成本逐年升高。考虑将纸质笔记转移到互联网上，方便查阅。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="选择-blog">选择 blog<a href="#选择-blog" class="hash-link" aria-label="选择 blog的直接链接" title="选择 blog的直接链接">​</a></h2><p>为什么不用现成的，例如：</p><ul><li>印象笔记</li><li>语雀</li><li>掘金</li><li>infoQ</li><li>CSDN</li><li>博客园</li><li>知乎</li></ul><p>平台是助力，也是禁锢。希望我的文字，能让更多的人看到。</p>]]></content:encoded>
            <category>开篇</category>
        </item>
        <item>
            <title><![CDATA[前端视角的可观测性(一)]]></title>
            <link>https://lin-xii.github.io/blog/2023/observability-frontend-1</link>
            <guid>https://lin-xii.github.io/blog/2023/observability-frontend-1</guid>
            <pubDate>Wed, 26 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[TL;DR]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tldr">TL;DR<a href="#tldr" class="hash-link" aria-label="TL;DR的直接链接" title="TL;DR的直接链接">​</a></h2><p>Gartner 将<strong>应用可观测性</strong>列为<strong>2023 年重要战略趋势</strong>之一。</p><p>作为开发者, 即便没有专精此道。但了解一下，还是有必要的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a href="#前言" class="hash-link" aria-label="前言的直接链接" title="前言的直接链接">​</a></h2><p>最近，我所在的产品组，将完善监控系统，放入了版本规划中。</p><p>趁此良机，了解了一波<strong>可观测性</strong>相关的背景和技术。</p><p>同时，对原有的监控方式，进行了一定的改造。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="可观测性">可观测性<a href="#可观测性" class="hash-link" aria-label="可观测性的直接链接" title="可观测性的直接链接">​</a></h2><blockquote><p><a href="https://zh.wikipedia.org/wiki/%E6%8E%A7%E5%88%B6%E7%90%86%E8%AB%96" target="_blank" rel="noopener noreferrer">控制理论</a>中的<strong>可观察性</strong>（observability）是指<a href="https://zh.wikipedia.org/wiki/%E7%B3%BB%E7%B5%B1" target="_blank" rel="noopener noreferrer">系统</a>可以由其外部输出推断其其内部<a href="https://zh.wikipedia.org/wiki/%E7%8B%80%E6%85%8B%E7%A9%BA%E9%96%93" target="_blank" rel="noopener noreferrer">状态</a>的程度。系统的可观察性和<a href="https://zh.wikipedia.org/wiki/%E5%8F%AF%E6%8E%A7%E5%88%B6%E6%80%A7" target="_blank" rel="noopener noreferrer">可控制性</a>是数学上<a href="https://zh.wikipedia.org/wiki/%E5%AF%B9%E5%81%B6_(%E6%95%B0%E5%AD%A6)" target="_blank" rel="noopener noreferrer">对偶</a>的概念。可观察性最早是匈牙利裔工程师<a href="https://zh.wikipedia.org/wiki/%E9%B2%81%E9%81%93%E5%A4%AB%C2%B7%E5%8D%A1%E5%B0%94%E6%9B%BC" target="_blank" rel="noopener noreferrer">鲁道夫·卡尔曼</a>针对线性动态系统提出的概念[<a href="https://zh.wikipedia.org/zh-hans/%E5%8F%AF%E8%A7%80%E6%B8%AC%E6%80%A7#cite_note-1" target="_blank" rel="noopener noreferrer">1<!-- -->]</a>[<a href="https://zh.wikipedia.org/zh-hans/%E5%8F%AF%E8%A7%80%E6%B8%AC%E6%80%A7#cite_note-2" target="_blank" rel="noopener noreferrer">2<!-- -->]</a>。若以<a href="https://zh.wikipedia.org/wiki/%E4%BF%A1%E5%8F%B7%E6%B5%81%E5%9B%BE" target="_blank" rel="noopener noreferrer">信号流图</a>来看，若所有的内部状态都可以输出到输出信号，此系统即有可观察性。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="什么是可观测性">什么是可观测性？<a href="#什么是可观测性" class="hash-link" aria-label="什么是可观测性？的直接链接" title="什么是可观测性？的直接链接">​</a></h3><blockquote><p>可观测性是指能够通过检查系统或应用的输出、日志和性能指标来监控、测量和理解系统或应用的状态。</p></blockquote><p>讲人话，我理解就是将传统监控系统的日志，进行了标准化、体系化。同时，将原来“孤岛式”的日志进行了“关联”。将所有日志组合成整体，以此来分析系统状态。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="为什么会出现或者说为什么现在火了">为什么会出现？或者说，为什么现在火了？<a href="#为什么会出现或者说为什么现在火了" class="hash-link" aria-label="为什么会出现？或者说，为什么现在火了？的直接链接" title="为什么会出现？或者说，为什么现在火了？的直接链接">​</a></h3><p>监控系统并不是什么稀罕事务，但为什么之前没有什么热度呢？</p><p>我认为，是排查问题的门槛，变高了。变高的原因，主要有 2 方面：</p><ol><li>系统复杂度</li><li>数据量</li></ol><h4 class="anchor anchorWithStickyNavbar_LWe7" id="系统复杂度">系统复杂度<a href="#系统复杂度" class="hash-link" aria-label="系统复杂度的直接链接" title="系统复杂度的直接链接">​</a></h4><p>首先，是系统的复杂度在不断上升。单机软件、集群部署、云服务、虚拟化。</p><p>软件部署方式的每一次升级，都在提升软件系统的整体能力。</p><p>与此同时，一旦出现问题，排查&amp;解决问题的难度，也在不断上升。如果身边有运维同学，可以听他们讲一讲，独属于他们的、深夜里的故事 🤣</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="数据量">数据量<a href="#数据量" class="hash-link" aria-label="数据量的直接链接" title="数据量的直接链接">​</a></h4><p>从计算机诞生，我们已经经历了单机软件、局域网、互联网，且身处<strong>移动互联网</strong>。</p><p>在网络高度普及的今天，软件和服务，包裹着每一个<strong>网民</strong>。网络触手的延伸，在提供了高度便利的同时，也给数据量带来了井喷式的增长。这给问题排查，增加了不小的难度。</p><p>当下，我们身处<strong>移动互联网</strong>的上半场，当摄像头、家用电器、车载系统和新基建中无处不在的传感器入网后，在移动互联网的下半场（IoT），数据量的暴增，是可以预见的。</p><p>所以，传统监控系统相对片面、局部的监控指标，无法满足复杂环境下的系统状态监控、问题排查和系统调优。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="怎么用">怎么用？<a href="#怎么用" class="hash-link" aria-label="怎么用？的直接链接" title="怎么用？的直接链接">​</a></h3><p>Opentelemetry、Prometheus、Grafana、Jaeger 等等。现在已经有很多成熟的开源工具可供集成、或二次定制开发。也有不少收费的平台，方便使用。</p><p>通过这些可观测性工具，可以</p><ol><li>更加全面的监控系统指标</li><li>更清晰的分析调用链条</li><li>更准确、更有把握的的优化系统瓶颈点</li></ol><p>这些不是空口白话，我们产品在初步集成 Jaeger 后，已经发现了几处有价值的隐藏问题。这在原来，只能通过大规模的压力测试（如果有）、客户现场反馈来发现、修复。</p><p>后边有机会（如果不鸽），会分享一些脱敏的相关实践。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="一点想法">一点想法<a href="#一点想法" class="hash-link" aria-label="一点想法的直接链接" title="一点想法的直接链接">​</a></h2><p>这周，集成进系统的 Jaeger 基本可用了。通过和后端师傅的交流，发现了几处隐藏的问题，挺开心的。</p><p>虽然有些马后炮了，但在毕业不久的时候，就有对完善的监控体系的期待了。可惜，当时虽然有考虑过监控系统的雏形，但只停留在想象中了。现实里的时间，都去打游戏了。。。</p><p>总之，<strong>Observability</strong>相关的技术, <strong>不是</strong>颠覆传统监控系统的<strong>银弹</strong>。</p><p>在我看来，更像是<strong>应运而生</strong>。是对传统监控体系的完善、补充和升级。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="#参考资料" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h2><ol><li><a href="https://zh.wikipedia.org/zh-hans/%E5%8F%AF%E8%A7%80%E6%B8%AC%E6%80%A7" target="_blank" rel="noopener noreferrer">wiki</a></li><li><a href="https://www.redhat.com/zh/topics/devops/what-is-observability" target="_blank" rel="noopener noreferrer">RedHat</a></li></ol>]]></content:encoded>
            <category>前端</category>
            <category>可观测性</category>
            <category>一点想法</category>
        </item>
        <item>
            <title><![CDATA[IPS产品经理]]></title>
            <link>https://lin-xii.github.io/blog/2018/ips-product-designer</link>
            <guid>https://lin-xii.github.io/blog/2018/ips-product-designer</guid>
            <pubDate>Sun, 25 Nov 2018 00:00:00 GMT</pubDate>
            <description><![CDATA[吐槽]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="吐槽">吐槽<a href="#吐槽" class="hash-link" aria-label="吐槽的直接链接" title="吐槽的直接链接">​</a></h2><p>2017 年 8 月, 我被转岗了. 转岗后, 我遇见了很多不曾想过的奇葩人 奇葩事.</p><p>本文仅从我个人角度, 描述我看到的, 一位新人产品经理, 如何从相识, 到相知, 然后走到了开发的对立面.</p><p>本文充满了个人情感, 完全作为吐槽用, 或许并不客观, 但保证所述为真材实料.</p><p>批评不自由, 则赞美无意义.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="初来">初来<a href="#初来" class="hash-link" aria-label="初来的直接链接" title="初来的直接链接">​</a></h3><p>大概是 8 9 月份某天吧, 这位并不萌的新产品经理来了, 被另一位产品经理带着, 和组里所有的开发&amp;测试同学, 挨个碰了个面, 混了个脸熟.</p><blockquote><p>由于我在新组里, 一直处于游离态, 只加了一个群, 实在看不到这位产品经理来的时间, 只能凭印象了.</p></blockquote><p>说实话, 第一感觉不是很好, 换句话说, 毫无理由, 我并不喜欢这位产品经理. 不过虽然不怎么待见人家, 我还是希望她段位高一些的, 起码让我这种想躺赢的, 能躺的舒服些 😜</p><blockquote><p>我这个人可能比较二, 或者是迷? 我很看重和陌生人第一次见面的感觉. 这个感觉, 从学生时代到现在, 整体偏准, 起码比我王者荣耀的胜率高多了. 那个, 戴口罩, 以及生病的不算.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="平静">平静<a href="#平静" class="hash-link" aria-label="平静的直接链接" title="平静的直接链接">​</a></h3><p>10 月份前后, 由于正在进行的项目需求已定, 也有可能是我没有进入到敌军核心, 了解不到高层信息, 新来的产品经理貌似没有什么施展拳脚的机会.</p><p>整体上, 这段时间我们就像两条平行线. 如果不是偶尔来这边找人, 我都忘了有这么号产品经理了...</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="成长">成长<a href="#成长" class="hash-link" aria-label="成长的直接链接" title="成长的直接链接">​</a></h3><p>10 月末, 接到了一个管理平台的定制, 用来参加入围测试. 需要新开发一些功能. 需求讨论会上, 是我第一次和这位接触.</p><p>一共几次会议, 这位话不多, 很平静. 只是偶尔的几句, 我们能做就做吧, 功能越多越好, 显得略微有些刺耳.</p><p>我觉得这位产品经理, 已经熟悉了一些产品特性, 但她可能还没有吃透, 她还有进步的空间.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="暴雨前夕">暴雨前夕<a href="#暴雨前夕" class="hash-link" aria-label="暴雨前夕的直接链接" title="暴雨前夕的直接链接">​</a></h3><p>无聊的时间总是过得很快, 一晃就年底.</p><p>转岗几个月, 正儿八经的代码基本没写, 光熟悉现有的坑, 和前面提到的, 我自己埋的那个入围测试的坑了.</p><p>这段时间, 能拿出来念叨念叨的事, 也就是做了 2 个 RG 独角兽, 2 个 PG 独角兽, 还有一些其他的模型.</p><blockquote><p>emmm, 做龙桃子独角兽的时候, 因为某同学的一句话, 导致心神恍惚, 左手血祭了.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="双龙出海">双龙出海<a href="#双龙出海" class="hash-link" aria-label="双龙出海的直接链接" title="双龙出海的直接链接">​</a></h3><p>新年新气象, 在新的一年里, 大家也都开始各显神通.</p><p>每年年初, 大家都开始为今年产品发展的方向做规划, 我们也不例外. 可能我在转岗前, 和总监谈话的过程中, 说了些有点用处的想法, 我这名搬砖选手, 也参与了一次规划会.</p><p>会议上"领导们"讨论了很多, 机器学习 大数据 虚拟化 云等高大上的名词映入眼帘, 让我产生了今年要忙死的感觉, 这么多新技术, 肯定比去年血祭高达强多了.</p><p>为了适应市场需要, 今年的重点有两个. 补足管理平台的分析能力和强化盒子的检测能力, 并完成二者的联动. 在五月份发布, 推向市场, 以便迎合三四季度冲量的目标.</p><p>方向定下后, 就要考虑如何更好 更高效 更平稳的落实在产品上, 高保真原型 需求文档必不可少. 我们这位已经不算新人的产品经理, 接下了高保真原型这份重担. 其中, 需求文档的梳理, 由一位 SE 负责, 最后他们一起梳理, 相辅相成, 为我们产品的发展, 添砖加瓦.</p><blockquote><p>如果我非常闲, 有可能会再介绍下这位厉害的 SE😜</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="初露锋芒">初露锋芒<a href="#初露锋芒" class="hash-link" aria-label="初露锋芒的直接链接" title="初露锋芒的直接链接">​</a></h3><p>燕子归来, 春暖花开, 转眼来到了万物复苏的季节.</p><p>我只搬管理平台的砖, 前面提到的年度任务, 需要产品经理的原型和 SE 的需求文档有个大致的脉络后, 我才能开始搬砖.</p><p>然鹅, 17 年底提出了 18 年核心项目的方案. 几个月过去, 小花马上就开了, 我们的产品经理还在辛苦的梳理需求, 设计原型. 我在一个偶然的情况下, 见到了一次貌似要给我用的, 用 Axure 做的原型. emmm, 怎么形容呢, 一言难尽吧, 省略 500 字.</p><p><img loading="lazy" src="/blog/assets/images/高保真-f75257984e44d4c7e4895e05767d0f44.png" width="1075" height="763" class="img_ev3q"></p><p>产品经理这么辛苦, SE 肯定也不能闲着, 毕竟他俩得互帮互助, 相辅相成呢. SE 特地从成都跑到北京出差半个月, 据说是赶过来"帮我"梳理需求. 结果是显然的, 我不知道 SE 是如何梳理需求的, 也不清楚他有没有圆满完成任务, 更没看见梳理好的需求包文档. 但是, 我确确实实听他在工位哼了两周的歌, 不要钱的那种.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="gtmd">GTMD<a href="#gtmd" class="hash-link" aria-label="GTMD的直接链接" title="GTMD的直接链接">​</a></h3><p>万事俱备, 东风已来, 那就搬起砖来? GTMD, 我还是太年轻了.</p><p>说实话, 已经记不清是 18 年几月份, 反正到了穿短袖的季节. 产品经理扔给我们个 Axure 画的"高保真"原型, SE 掏出份需求包文档.</p><p>由于 Axure 这软件太高端, 我等傻搬砖的如何会用这么金贵的东西. 再说了, 就算会用, 也没那么高的抽象艺术解析力呀, 我还是看需求包文档吧. 那直白的描述, 平铺直叙的文档脉络, 满屏幕, 只有主语不同的句式, 多 TMD 浅显易懂. 果然技术出身的 SE 更懂人心, 知道我等理解能力不行, 又没啥抽象派的艺术细胞, 给了个这么接地气的 Excel🙃</p><p><img loading="lazy" src="/blog/assets/images/需求-16764ab5ac4b801bfda4ea835cd15125.png" width="348" height="254" class="img_ev3q"></p><p>花了几周, 把之前那些接地下气的代码重写一部分. 又接着地气开发了俩月. 产品经理在评审会上认为我按照需求包文档搬的砖, 不符合日日更新的"高保真"原型设计, 需要重做. 我一个搬砖的能怎么办, 肯定得找牛人 SE 来帮忙啊.</p><p>让我没想到的是, 牛人也有牛人的烦恼. 当南北两大家齐聚一堂, 共议需求时, 会产生何种的化学反应?</p><p>当然是各有各的尊严, 据理力争. 没有什么是一次会议解决不了的, 如果有, 那就多来几次. 直到搁置争议, GTMD.</p><blockquote><p>GTMD, 代指"共同面对". 出自王者荣耀, 四冠王战队 QGHappy, 中单选手伪装.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="忽忽悠悠">忽忽悠悠<a href="#忽忽悠悠" class="hash-link" aria-label="忽忽悠悠的直接链接" title="忽忽悠悠的直接链接">​</a></h3><p>太极生两仪, 两仪生四象, 四象生八卦~</p><p>产品经理认为需求包文档不合理, 要求舍弃需求包文档, 按照日日更新的"高保真"原型来做. 作为一个在其他团队搬过砖的选手, 对这种要求, 我肯定是拒绝的.</p><p>然鹅, 对于我的不配合, 产品经理非常不满, 问我: 为什么别人家都能把砖砌成双子塔, 而我们只能守着小钟楼? 我无言以对, 只能用上无师自通的太极八卦之术来应对. emmm, 就是和稀泥. 经过几个小时的努力, 写了俩月的代码, 基本可以半重构了. 至于发布日期, 抱歉, 我司 deadline 不就是拿来延的么?</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="硝烟再起">硝烟再起<a href="#硝烟再起" class="hash-link" aria-label="硝烟再起的直接链接" title="硝烟再起的直接链接">​</a></h3><p>春夏秋冬, 一年四季. 转眼就快能吃冬至的饺子了.</p><p>去年计划今年 5 月, 发布我们的"单子塔". 由于开发能力不足, 无法适应日新月异的新需求. 我们的产品, 已经维持了几个月的"马上发布"阶段.</p><p>上周五例会, 所有不管相关不相关的人员, 聚集一堂, 看着管理平台那 37 个 later 状态的八阿哥, 为他们选择归途.</p><p>我那的功能, 再次出现了争议. 从按照需求包文档不行, 改成跟随日日更新"高保真"开发. 结果这次会议上, "高保真"貌似也不合心意了, 需要重新讨论需求. 涉及到需求的讨论, 那肯定产品经理和 SE 两位大佬商议, 而商议的结果, 在周一上午草草出场, 看不到一丝心血. 不要问我和前面那个图有什么区别, 我也不知道.</p><p><img loading="lazy" src="/blog/assets/images/商议结果-e663d344c7aa501180f2bf1c13214925.png" width="888" height="326" class="img_ev3q"></p><p>我出离的愤怒, 在微信群里对产品经理发出了质问. 果然, 依旧是搁置争议, SP 版本再说.</p><hr><p>懒得多说什么了, 还是写写文档吐吐槽, 多写代码多看书, 早睡早起身体好. 另祝大家早日上王者.</p>]]></content:encoded>
            <category>产品经理</category>
            <category>吐槽</category>
            <category>奇葩事</category>
        </item>
    </channel>
</rss>