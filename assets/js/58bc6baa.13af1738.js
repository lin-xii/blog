"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2679],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),m=a,g=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,l(l({ref:t},c),{},{components:n})):r.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[u]="string"==typeof e?e:a,l[1]=p;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5108:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={title:"Context and contextValue",date:new Date("2023-11-02T00:00:00.000Z"),author:"lin-xii",tags:["Apollo","GraphQL","\u6e23\u7ffb\u8bd1"],sidebar_position:2},l=void 0,p={unversionedId:"Apollo Server/Resolving Operations/sharing-context",id:"Apollo Server/Resolving Operations/sharing-context",title:"Context and contextValue",description:"\u5728 GraphQL operation \u6267\u884c\u671f\u95f4\uff0c\u901a\u8fc7\u521b\u5efa\u540d\u4e3acontextValue\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u7684 resolver \u548c plugin \u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002",source:"@site/docs/Apollo Server/Resolving Operations/sharing-context.md",sourceDirName:"Apollo Server/Resolving Operations",slug:"/Apollo Server/Resolving Operations/sharing-context",permalink:"/blog/docs/Apollo Server/Resolving Operations/sharing-context",draft:!1,tags:[{label:"Apollo",permalink:"/blog/docs/tags/apollo"},{label:"GraphQL",permalink:"/blog/docs/tags/graph-ql"},{label:"\u6e23\u7ffb\u8bd1",permalink:"/blog/docs/tags/\u6e23\u7ffb\u8bd1"}],version:"current",sidebarPosition:2,frontMatter:{title:"Context and contextValue",date:"2023-11-02T00:00:00.000Z",author:"lin-xii",tags:["Apollo","GraphQL","\u6e23\u7ffb\u8bd1"],sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Resolvers",permalink:"/blog/docs/Apollo Server/Resolving Operations/resolvers"},next:{title:"\u5173\u4e8e\u6211",permalink:"/blog/docs/about-me"}},i={},s=[{value:"<code>context</code>\u51fd\u6570",id:"context\u51fd\u6570",level:2},{value:"\u629b\u51fa\u9519\u8bef",id:"\u629b\u51fa\u9519\u8bef",level:3},{value:"<code>contextValue</code>\u5bf9\u8c61",id:"contextvalue\u5bf9\u8c61",level:2},{value:"resolver",id:"resolver",level:3},{value:"plugin",id:"plugin",level:3}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u5728 GraphQL operation \u6267\u884c\u671f\u95f4\uff0c\u901a\u8fc7\u521b\u5efa\u540d\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5668\u7684 ",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/data/resolvers"},"resolver")," \u548c ",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/builtin-plugins"},"plugin")," \u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002"),(0,a.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\u4f20\u9012 resolver \u53ef\u80fd\u9700\u8981\u7684\u6570\u636e\uff0c\u4f8b\u5982",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/security/authentication#putting-authenticated-user-info-in-your-contextvalue"},"\u8eab\u4efd\u4fe1\u606f\u8ba4\u8bc1\u8303\u56f4"),"\u3001",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/data/fetching-data"},"\u6e90\u6570\u636e"),"\u3001\u6570\u636e\u5e93\u8fde\u63a5\u548c\u81ea\u5b9a\u4e49 fetch \u51fd\u6570\u3002\u5982\u679c\u5728 resolver \u4e4b\u95f4\u4f7f\u7528 ",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/data/fetching-data/#batching-and-caching"},"dataloader")," \u6267\u884c\u6279\u91cf\u8bf7\u6c42\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5b83\u4eec\u8d4b\u503c\u7ed9",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\u3002"),(0,a.kt)("h2",{id:"context\u51fd\u6570"},(0,a.kt)("inlineCode",{parentName:"h2"},"context"),"\u51fd\u6570"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Apollo Server 4 \u53d8\u66f4\u4e86\u5b9a\u4e49",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u51fd\u6570\u7684\u8bed\u6cd5\u3002\u66f4\u591a\u4fe1\u606f\u53c2\u8003",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/migration/#context-initialization-function"},"more details"),"\u3002")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u51fd\u6570\u662f\u5f02\u6b65\u7684\uff0c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a",(0,a.kt)("strong",{parentName:"p"},"\u5bf9\u8c61"),"\u3002\u670d\u52a1\u5668\u7684 resolver \u548c plugin \u53ef\u4ee5\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\u8bbf\u95ee\u8fd9\u4e2a\u5bf9\u8c61\u3002"),(0,a.kt)("p",null,"\u53ef\u4ee5\u4f20\u9012",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u51fd\u6570\u7ed9\u9009\u62e9(\u4f8b\u5982",(0,a.kt)("inlineCode",{parentName:"p"},"expressMiddleware"),"\u6216",(0,a.kt)("inlineCode",{parentName:"p"},"startStandaloneServer"),")\u7684\u5185\u7f6e\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u670d\u52a1\u5668\u5728\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u4f1a\u8c03\u7528\u4e00\u6b21",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u51fd\u6570\uff0c\u4f7f\u5f97\u53ef\u4ee5\u5b9a\u5236\u6bcf\u4e00\u6b21\u8bf7\u6c42\u7ec6\u8282\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"(\u4f8b\u5982 HTTP headers)\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { GraphQLError } from "graphql";\n\nconst resolvers = {\n  Query: {\n    // Example resolver\n    adminExample: (parent, args, contextValue, info) => {\n      if (contextValue.authScope !== ADMIN) {\n        throw new GraphQLError("not admin!", {\n          extensions: { code: "UNAUTHENTICATED" },\n        });\n      }\n    },\n  },\n};\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\n\nconst { url } = await startStandaloneServer(server, {\n  // Your async context function should async and\n  // return an object\n\n  context: async ({ req, res }) => ({\n    authScope: getScope(req.headers.authorization),\n  }),\n});\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u524d\u9762\u7684\u4f8b\u5b50\u5047\u8bbe\u4f60\u6b63\u5728\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"startStandaloneServer"),"\u6216",(0,a.kt)("inlineCode",{parentName:"p"},"expressMiddleware"),"\uff0c\u5b83\u4eec\u90fd\u4f7f\u7528 Express \u4f5c\u4e3a\u57fa\u7840\u5e93\u3002\n\u5982\u679c\u4f60",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/integrations/integration-index"},"\u4f7f\u7528\u4e0d\u540c\u7684\u6846\u67b6"),"\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u51fd\u6570\u63a5\u6536\u7684\u53c2\u6570\u4e5f\u8bb8\u4e0d\u540c\u3002")),(0,a.kt)("p",null,"\u5982\u679c\u4f60\u6b63\u5728\u4f7f\u7528 Typescript\uff0c\u4e14\u901a\u8fc7\u5411",(0,a.kt)("inlineCode",{parentName:"p"},"ApolloServer"),"\u4f20\u9012\u4e00\u4e2a\u5e26\u7c7b\u578b\u7684\u53c2\u6570\u6765\u952e\u5165 context(\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u4e0d\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"ApolloServer<BaseContext>"),")\uff0c\u4f60",(0,a.kt)("em",{parentName:"p"},"\u5fc5\u987b"),"\u63d0\u4f9b\u540d\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u7684\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u56e0\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u521d\u59cb\u5316\u51fd\u6570\u662f\u5f02\u6b65\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528\u5b83\u53bb\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\u5e76\u7b49\u5f85\u5176\u4ed6\u64cd\u4f5c\u5b8c\u6210\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"context: async () => ({\n  db: await client.connect(),\n})\n\n// Resolver\n(parent, args, contextValue, info) => {\n  return contextValue.db.query('SELECT * FROM table_name');\n}\n")),(0,a.kt)("h3",{id:"\u629b\u51fa\u9519\u8bef"},"\u629b\u51fa\u9519\u8bef"),(0,a.kt)("p",null,"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c",(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u51fd\u6570\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0cApollo Server \u4f1a\u5728 JSON \u54cd\u5e94\u4e2d\u8fd4\u56de\u8be5\u9519\u8bef\uff0c\u5e76\u5e26\u6709 500 HTTP \u72b6\u6001\u4ee3\u7801\u3002\u5982\u679c\u8fd9\u4e2a\u9519\u8bef\u4e0d\u662f",(0,a.kt)("inlineCode",{parentName:"p"},"GraphQLError"),"\uff0c\u9519\u8bef\u4fe1\u606f\u7684\u524d\u7f00\u5e26\u6709",(0,a.kt)("inlineCode",{parentName:"p"},"Context creation failed: "),"\u3002"),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u901a\u8fc7\u629b\u51fa\u5e26\u6709 ",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/data/errors/#setting-http-status-code-and-headers"},"http \u6269\u5c55"),"\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"GraphQLError"),"\uff0c\u6765\u4fee\u6539\u9519\u8bef\u4fe1\u606f\u4e2d\u7684 HTTP \u72b6\u6001\u7801\u3002\u4f8b\u5982\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"context: async ({ req }) => {\n  const user = await getUserFromReq(req);\n  if (!user) {\n    throw new GraphQLError('User is not authenticated', {\n      extensions: {\n        code: 'UNAUTHENTICATED',\n        http: { status: 401 },\n      }\n    });\n  }\n\n  // If the below throws a non-GraphQLError, the server returns\n  // `code: \"INTERNAL_SERVER_ERROR\"` with an HTTP status code 500, and\n  // a message starting with \"Context creation failed: \".\n  const db = await getDatabaseConnection();\n\n  return { user, db };\n},\n")),(0,a.kt)("h2",{id:"contextvalue\u5bf9\u8c61"},(0,a.kt)("inlineCode",{parentName:"h2"},"contextValue"),"\u5bf9\u8c61"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"context"),"\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\u5bf9\u8c61\uff0c\u5b83\u53ef\u4ee5\u88ab plugin \u548c resolver \u8bbf\u95ee\u3002"),(0,a.kt)("h3",{id:"resolver"},"resolver"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"resolver \u6c38\u8fdc\u4e0d\u8be5\u7834\u574f\u6027\u7684\u4fee\u6539",(0,a.kt)("inlineCode",{parentName:"strong"},"contextValue"),"\u53c2\u6570\u3002"),"\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd resolver \u4e4b\u95f4\u7684\u4e00\u81f4\u6027\u5e76\u51cf\u5c11\u975e\u9884\u671f\u7684\u9519\u8bef\u3002")),(0,a.kt)("p",null,"resolver \u901a\u8fc7\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5171\u4eab\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\u5bf9\u8c61\u3002\u6240\u6709\u4e3a\u7279\u5b9a operation \u6267\u884c\u7684 resolver \u90fd\u53ef\u4ee5\u8bbf\u95ee",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { AnimalAPI } from "./datasources/animals";\n\nconst resolvers = {\n  Query: {\n    // All of our resolvers can access our shared contextValue!\n    dogs: (_, __, contextValue) => {\n      return contextValue.dataSources.animalApi.getDogs();\n    },\n    cats: (_, __, contextValue) => {\n      return contextValue.dataSources.animalApi.getCats();\n    },\n  },\n};\n\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\n\nconst { url } = await startStandaloneServer(server, {\n  context: async () => {\n    const animalApi = new AnimalAPI();\n    return {\n      dataSources: {\n        animalApi,\n      },\n    };\n  },\n});\n')),(0,a.kt)("h3",{id:"plugin"},"plugin"),(0,a.kt)("p",null,"\u5185\u7f6e\u7684\u548c",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/integrations/plugins/#the-anatomy-of-a-plugin"},"\u81ea\u5b9a\u4e49 plugin")," \u901a\u8fc7\u8bf7\u6c42",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/integrations/plugins/#inspecting-request-and-response-details"},"\u751f\u547d\u5468\u671f\u51fd\u6570"),"\uff0c\u90fd\u53ef\u4ee5\u8bbf\u95ee",(0,a.kt)("inlineCode",{parentName:"p"},"contextValue"),"\uff0c\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const server = new ApolloServer({\n  typeDefs,\n  resolvers: {\n    Query: {\n      hello: (root, args, { token }) => {\n        return token;\n      },\n    },\n  },\n  //highlight-start\n  plugins: [\n    {\n      async requestDidStart({ contextValue }) {\n        // token is properly inferred as a string\n        console.log(contextValue.token);\n      },\n    },\n  ],\n  //highlight-end\n});\n\nconst { url } = await startStandaloneServer(server, {\n  context: async ({ req, res }) => ({\n    token: await getTokenForRequest(req),\n  }),\n});\n")))}d.isMDXComponent=!0}}]);