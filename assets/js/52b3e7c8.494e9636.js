"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5800],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),i=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(r),m=a,k=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return r?n.createElement(k,o(o({ref:t},c),{},{components:r})):n.createElement(k,o({ref:t},c))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,o=new Array(l);o[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var i=2;i<l;i++)o[i]=r[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8070:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var n=r(7462),a=(r(7294),r(3905));const l={title:"Get Started with Apollo Server",date:new Date("2023-11-09T00:00:00.000Z"),authors:"lin-xii",sidebar_label:"Get started",sidebar_position:2,tags:["Apollo","GraphQL","\u6e23\u7ffb\u8bd1"]},o=void 0,p={unversionedId:"Apollo Server/Get Started",id:"Apollo Server/Get Started",title:"Get Started with Apollo Server",description:"\u8fd9\u4efd\u6559\u7a0b\u53ef\u4ee5\u5e2e\u4f60\uff1a",source:"@site/docs/Apollo Server/Get Started.md",sourceDirName:"Apollo Server",slug:"/Apollo Server/Get Started",permalink:"/blog/docs/Apollo Server/Get Started",draft:!1,tags:[{label:"Apollo",permalink:"/blog/docs/tags/apollo"},{label:"GraphQL",permalink:"/blog/docs/tags/graph-ql"},{label:"\u6e23\u7ffb\u8bd1",permalink:"/blog/docs/tags/\u6e23\u7ffb\u8bd1"}],version:"current",sidebarPosition:2,frontMatter:{title:"Get Started with Apollo Server",date:"2023-11-09T00:00:00.000Z",authors:"lin-xii",sidebar_label:"Get started",sidebar_position:2,tags:["Apollo","GraphQL","\u6e23\u7ffb\u8bd1"]},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/blog/docs/Apollo Server/Introduction"},next:{title:"Schema basics",permalink:"/blog/docs/Apollo Server/Defining a Schema/graphql-schema-basics"}},s={},i=[{value:"Step 1: \u521b\u5efa\u9879\u76ee",id:"step-1-\u521b\u5efa\u9879\u76ee",level:2},{value:"Step 2: \u5b89\u88c5\u4f9d\u8d56",id:"step-2-\u5b89\u88c5\u4f9d\u8d56",level:2},{value:"Step 3: \u5b9a\u4e49 GraphQL schema",id:"step-3-\u5b9a\u4e49-graphql-schema",level:2},{value:"Step 4\uff1a\u5b9a\u4e49\u6570\u636e\u96c6",id:"step-4\u5b9a\u4e49\u6570\u636e\u96c6",level:2},{value:"Step 5: \u5b9a\u4e49 resolver",id:"step-5-\u5b9a\u4e49-resolver",level:2},{value:"Step 6\uff1a\u521b\u5efa Apollo Server \u5b9e\u4f8b",id:"step-6\u521b\u5efa-apollo-server-\u5b9e\u4f8b",level:2}],c={toc:i},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"\u8fd9\u4efd\u6559\u7a0b\u53ef\u4ee5\u5e2e\u4f60\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5bf9 GraphQL \u7406\u5ff5\u6709\u57fa\u672c\u7684\u7406\u89e3"),(0,a.kt)("li",{parentName:"ul"},"\u5b9a\u4e49\u4e00\u4efd\u7b26\u5408\u4f60\u6570\u636e\u96c6\u7ed3\u6784\u7684 GraphQL ",(0,a.kt)("strong",{parentName:"li"},"schema")),(0,a.kt)("li",{parentName:"ul"},"\u8fd0\u884c\u4e00\u4e2a Apollo Server \u5b9e\u4f8b\uff0c\u5b83\u53ef\u4ee5\u8ba9\u4f60\u6839\u636e schema \u6267\u884c query")),(0,a.kt)("p",null,"\u8fd9\u4efd\u6559\u7a0b\u5047\u8bbe\u4f60\u719f\u6089\u547d\u4ee4\u884c\u548c JavaScript\uff0c\u5e76\u4e14\u5df2\u7ecf\u5b89\u88c5\u4e86\u8fd1\u671f\u7248\u672c\u7684 Node.js(v14.16.0)\u3002\u53e6\u5916\uff0c\u5bf9\u4e8e\u611f\u5174\u8da3\u7684\u4eba\uff0c\u8fd9\u4efd\u6559\u7a0b\u5305\u542b\u4e86\u63cf\u8ff0\u5982\u4f55\u7528 TypeScript \u8bbe\u7f6e Apollo Server \u7684\u53ef\u9009\u7ae0\u8282"),(0,a.kt)("h2",{id:"step-1-\u521b\u5efa\u9879\u76ee"},"Step 1: \u521b\u5efa\u9879\u76ee"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u5728\u8def\u5f84\u4e0b\uff0c\u4e3a\u65b0\u9879\u76ee\u521b\u5efa\u4e00\u4e2a\u65b0\u76ee\u5f55\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir graphql-server-example\ncd graphql-server-example\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"li"},"npm"),"\u521d\u59cb\u5316 Node.js \u9879\u76ee(\u6216\u8005\u4f7f\u7528\u5176\u4ed6\u5305\u7ba1\u7406\u5668\uff0c\u4f8b\u5982 Yarn)\uff1a")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'npm init --yes && npm pkg set type="module"\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u8fd9\u4efd\u6559\u7a0b\u4f7f\u7528 ES Modules \u8bbe\u7f6e\u9879\u76ee\uff0c\u8fd9\u5c06\u7b80\u5316\u6211\u4eec\u7684\u793a\u4f8b\u5e76\u5141\u8bb8\u6211\u4eec\u4f7f\u7528\u9876\u5c42",(0,a.kt)("inlineCode",{parentName:"p"},"await"),"\u3002")),(0,a.kt)("p",null,"\u4f60\u7684\u9879\u76ee\uff0c\u73b0\u5728\u5305\u542b\u4e86\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"package.json"),"\u6587\u4ef6\u3002"),(0,a.kt)("h2",{id:"step-2-\u5b89\u88c5\u4f9d\u8d56"},"Step 2: \u5b89\u88c5\u4f9d\u8d56"),(0,a.kt)("p",null,"\u8fd0\u884c Apollo Server \u9700\u8981 2 \u4e2a\u9876\u5c42\u4f9d\u8d56\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"GraphQL"),"(\u4e5f\u88ab\u79f0\u4f5c",(0,a.kt)("inlineCode",{parentName:"li"},"graphql-js"),")\u662f\u5b9e\u73b0\u6838\u5fc3 GraphQL \u89e3\u6790\u548c\u6267\u884c\u7b97\u6cd5\u7684\u5e93\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"@apollo/server"),"\u662f Apollo Server \u81ea\u8eab\u4e3b\u8981\u7684\u5e93\u3002Apollo Server \u77e5\u9053\u5982\u4f55\u5c06 HTTP \u8bf7\u6c42\u4e0e\u54cd\u5e94\u8f6c\u53d8\u4e3a GraphQL operation \u5e76\u5728\u652f\u6301\u63d2\u4ef6\u548c\u5176\u4ed6\u529f\u80fd\u7684\u3001\u53ef\u6269\u5c55\u7684\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u5b83\u4eec\u3002")),(0,a.kt)("p",null,"\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5b89\u88c5\u8fd9\u4e9b\u4f9d\u8d56\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @apollo/server graphql\n")),(0,a.kt)("h2",{id:"step-3-\u5b9a\u4e49-graphql-schema"},"Step 3: \u5b9a\u4e49 GraphQL schema"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"\u4e0b\u9762\u7684\u4ee3\u7801\u5757\u9ed8\u8ba4\u4f7f\u7528 TypeScript"),"\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u6bcf\u4e2a\u4ee3\u7801\u5757\u524d\u7684\u4e0b\u62c9\u83dc\u5355\u6765\u5207\u6362\u5230 JavaScript\u3002"),(0,a.kt)("p",{parentName:"blockquote"},"\u5982\u679c\u6b63\u5e38\u4f7f\u7528 JavaScript\uff0c\u5728",(0,a.kt)("inlineCode",{parentName:"p"},".ts"),"\u548c",(0,a.kt)("inlineCode",{parentName:"p"},".tsx"),"\u51fa\u73b0\u7684\u5730\u65b9\uff0c\u4f7f\u7528",(0,a.kt)("inlineCode",{parentName:"p"},".js"),"\u548c",(0,a.kt)("inlineCode",{parentName:"p"},".jsx"),"\u6269\u5c55\u540d\u3002")),(0,a.kt)("p",null,"\u6bcf\u4e2a GraphQL Server(\u5305\u62ec Apollo Server)\u4f7f\u7528 schema \u6765\u5b9a\u4e49 client \u53ef\u4ee5 query \u7684\u6570\u636e\u7684\u7ed3\u6784\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a server\uff0c\u7528\u4e8e\u901a\u8fc7 title \u548c author \u6765\u67e5\u8be2\u5230 books \u7684\u96c6\u5408\u3002"),(0,a.kt)("p",null,"\u6253\u5f00",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'import { ApolloServer } from "@apollo/server";\nimport { startStandaloneServer } from "@apollo/server/standalone";\n\n// A schema is a collection of type definitions (hence "typeDefs")\n// that together define the "shape" of queries that are executed against\n// your data.\nconst typeDefs = `#graphql\n  # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.\n\n  # This "Book" type defines the queryable fields for every book in our data source.\n  type Book {\n    title: String\n    author: String\n  }\n\n  # The "Query" type is special: it lists all of the available queries that\n  # clients can execute, along with the return type for each. In this\n  # case, the "books" query returns an array of zero or more Books (defined above).\n  type Query {\n    books: [Book]\n  }\n`;\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u6dfb\u52a0",(0,a.kt)("inlineCode",{parentName:"p"},"#graphql"),"\u5230\u6a21\u7248\u5b57\u9762\u91cf\u7684\u5f00\u5934\uff0c\u53ef\u4ee5\u5728\u4e00\u4e9b IDE \u4e2d\u5f00\u542f GraphQL \u8bed\u6cd5\u9ad8\u4eae\u3002")),(0,a.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7b80\u5355\u3001\u6709\u6548\u7684 schema\u3002client \u53ef\u4ee5\u6267\u884c\u540d\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"books"),"\u7684 query\uff0c\u5e76\u4e14\u6211\u4eec\u7684 server \u5c06\u8fd4\u56de 0 \u6216\u591a\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"Book"),"\u5bf9\u8c61\u7ec4\u6210\u7684\u6570\u7ec4\u3002"),(0,a.kt)("h2",{id:"step-4\u5b9a\u4e49\u6570\u636e\u96c6"},"Step 4\uff1a\u5b9a\u4e49\u6570\u636e\u96c6"),(0,a.kt)("p",null,"\u65e2\u7136\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u6570\u636e\u7684",(0,a.kt)("em",{parentName:"p"},"\u7ed3\u6784"),"\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9a\u4e49\u6570\u636e\u672c\u8eab\u4e86\u3002"),(0,a.kt)("p",null,"Apollo Server \u53ef\u4ee5\u83b7\u53d6\u6570\u636e\u4ece\u4f60\u8fde\u63a5\u7684\u4efb\u610f\u6570\u636e\u6e90(\u5305\u62ec\u6570\u636e\u5e93\u3001REST API\u3001\u9759\u6001\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u6216\u53e6\u4e00\u4e2a GraphQL server)\u3002\u56e0\u4e3a\u8fd9\u4efd\u6559\u7a0b\u7684\u76ee\u7684\uff0c\u6211\u4eec\u5c06\u786c\u7f16\u7801\u6211\u4eec\u793a\u4f8b\u4f7f\u7528\u7684\u6570\u636e\u3002"),(0,a.kt)("p",null,"\u6dfb\u52a0\u4e0b\u9762\u4ee3\u7801\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts"),"\u6587\u4ef6\u5e95\u90e8\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const books = [\n  {\n    title: "The Awakening",\n    author: "Kate Chopin",\n  },\n  {\n    title: "City of Glass",\n    author: "Paul Auster",\n  },\n];\n')),(0,a.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u5b9a\u4e49\u4e86 client \u53ef\u4ee5\u67e5\u8be2\u7684\u6570\u636e\u96c6\u3002\n\u6ce8\u610f\uff0c\u6570\u7ec4\u4e2d\u7684 2 \u4e2a\u5bf9\u8c61\uff0c\u6bcf\u4e00\u4e2a\u90fd\u7b26\u5408\u6211\u4eec\u5728 schema \u4e2d\u5b9a\u4e49\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"Book"),"\u7c7b\u578b\u7684\u7ed3\u6784\u3002"),(0,a.kt)("h2",{id:"step-5-\u5b9a\u4e49-resolver"},"Step 5: \u5b9a\u4e49 resolver"),(0,a.kt)("p",null,"\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86\u6570\u636e\u96c6\uff0c\u4f46\u662f Apollo Server \u4e0d\u77e5\u9053\u5f53\u5b83\u6267\u884c query \u662f\uff0c\u5e94\u8be5\u5982\u4f55\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u521b\u5efa ",(0,a.kt)("strong",{parentName:"p"},"resolver"),"\u3002"),(0,a.kt)("p",null,"Resolver \u544a\u8bc9 Apollo Server \u5982\u4f55\u83b7\u53d6\u5173\u8054\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u3002\u56e0\u4e3a\u6211\u4eec\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"Book"),"\u6570\u7ec4\u662f\u786c\u7f16\u7801\u7684\uff0c\u6240\u4ee5\u76f8\u5e94\u7684 resolver \u975e\u5e38\u7b80\u5355\u3002"),(0,a.kt)("p",null,"\u6dfb\u52a0\u4e0b\u9762\u4ee3\u7801\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts"),"\u6587\u4ef6\u5e95\u90e8\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'// Resolvers define how to fetch the types defined in your schema.\n// This resolver retrieves books from the "books" array above.\nconst resolvers = {\n  Query: {\n    books: () => books,\n  },\n};\n')),(0,a.kt)("h2",{id:"step-6\u521b\u5efa-apollo-server-\u5b9e\u4f8b"},"Step 6\uff1a\u521b\u5efa Apollo Server \u5b9e\u4f8b"),(0,a.kt)("p",null,"\u6211\u4eec\u5df2\u7ecf\u5b9a\u4e49\u4e86 schema\u3001\u6570\u636e\u96c6\u548c resolver\u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u5728\u521d\u59cb\u5316 Apollo Server \u7684\u65f6\u5019\uff0c\u7ed9\u5b83\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002"),(0,a.kt)("p",null,"\u6dfb\u52a0\u4e0b\u9762\u4ee3\u7801\u5230",(0,a.kt)("inlineCode",{parentName:"p"},"index.ts"),"\u6587\u4ef6\u5e95\u90e8\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// The ApolloServer constructor requires two parameters: your schema\n// definition and your set of resolvers.\nconst server = new ApolloServer({\n  typeDefs,\n  resolvers,\n});\n\n// Passing an ApolloServer instance to the `startStandaloneServer` function:\n//  1. creates an Express app\n//  2. installs your ApolloServer instance as middleware\n//  3. prepares your app to handle incoming requests\nconst { url } = await startStandaloneServer(server, {\n  listen: { port: 4000 },\n});\n\nconsole.log(`\ud83d\ude80  Server ready at: ${url}`);\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u8fd9\u4efd\u6559\u7a0b\u4f7f\u7528 Apollo Server \u7684 ",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/api/standalone/"},"standalone web server"),"\u3002\u5982\u679c\u4f60\u60f3\u96c6\u6210 Apollo Server \u5230\u4f60\u5728\u7528\u7684 web \u6846\u67b6\uff0c\u4f8b\u5982 Express\uff0c\u53c2\u8003\u6211\u4eec\u7684",(0,a.kt)("a",{parentName:"p",href:"https://www.apollographql.com/docs/apollo-server/integrations/integration-index"},"web framework integration"),"\u3002")))}d.isMDXComponent=!0}}]);